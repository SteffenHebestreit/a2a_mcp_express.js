version: '3.8'

services:
  agent1:
    build: .
    container_name: agent1
    environment:
      - LOG_LEVEL=DEBUG
    env_file:
      - .env.agent1
    volumes:
      - ./agent1-config.yml:/usr/src/app/agent-config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agent1.rule=Host(`agent1.localhost`)"
      - "traefik.http.routers.agent1.entrypoints=web"
      - "traefik.http.services.agent1.loadbalancer.server.port=3000"
    networks:
      - a2a_network

  agent2:
    build: .
    container_name: agent2
    environment:
      - LOG_LEVEL=DEBUG
    env_file:
      - .env.agent2
    volumes:
      - ./agent2-config.yml:/usr/src/app/agent-config.yml
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.agent2.rule=Host(`agent2.localhost`)"
      - "traefik.http.routers.agent2.entrypoints=web"
      - "traefik.http.services.agent2.loadbalancer.server.port=3000"
    networks:
      - a2a_network

  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - a2a_network

  redis:
    image: "redis:alpine"
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - a2a_network

  mcp-mock-server:
    build: ./mcp-mock-server
    container_name: mcp-mock
    ports:
      - "9000:9000"
    networks:
      - a2a_network

networks:
  a2a_network:
    driver: bridge
